// Programa...: CtbANC
// Autor......: Robert Koch
// Data.......: 05/11/2022 (inicio)
// Descricao..: Contabilizacao do % de ato nao cooperativo (compra uva e derivados de nao associados) - GLPI 12670

// Tags para automatizar catalogo de customizacoes:
// #TipoDePrograma    #Processo
// #Descricao         #Gera contabilizacao do % de ato nao cooperativo (compra uva e derivados de nao associados)
// #PalavasChave      #GLPI12670 #ANC #Contabilizacao #Ato_Nao_Cooperativo #ato_nao_cooperado
// #TabelasPrincipais #SD1
// #Modulos           #CTB

// Historico de alteracoes:
//

// ----------------------------------------------------------------------------------------------------------------------------
User Function CtbANC (_lAutomat)
	Local cCadastro := "Contabilizacao do % de ato nao cooperativo (compra uva e derivados de nao associados)"
	Local aSays     := {}
	Local aButtons  := {}
	Local nOpca     := 0
	Local lPerg     := .F.
	private _lAuto   := iif (valtype (_lAutomat) == "L", _lAutomat, .F.)

	// Verifica se o usuario tem liberacao para uso desta rotina.
	if ! U_ZZUVL ('145', __cUserID, .T.)
		return
	endif

	Private cPerg := "CTBANC"
	_ValidPerg()
	Pergunte(cPerg,.F.)

	if _lAuto != NIL .and. _lAuto
		Processa( { |lEnd| _Gera() } )
	else
		AADD(aSays,cCadastro)
		AADD(aSays,"")
		AADD(aSays,"")
		AADD(aButtons, { 5, .T.,{|| lPerg := Pergunte(cPerg,.T. ) } } )
		AADD(aButtons, { 1, .T.,{|| nOpca := If(( lPerg .Or. Pergunte(cPerg,.T.)) .And. _TudoOk() , 1, 2 ), If( nOpca == 1, FechaBatch(), Nil ) }})
		AADD(aButtons, { 2, .T.,{|| FechaBatch() }} )
		FormBatch( cCadastro, aSays, aButtons )
		If nOpca == 1
			Processa( { |lEnd| _Gera() } )
		Endif
	endif
return


// --------------------------------------------------------------------------
// 'Tudo OK' do FormBatch.
Static Function _TudoOk()
	local _lRet := .T.
	local _oSQL := NIL

	// Verifica calendario contabil.
	if _lRet
		_oSQL := ClsSQL ():New ()
		_oSQL:_sQuery := ""
		_oSQL:_sQuery += " SELECT COUNT (*)"
		_oSQL:_sQuery +=   " FROM " + RetSQLName ("CTG") + " CTG "
		_oSQL:_sQuery +=  " WHERE D_E_L_E_T_ = ''"
		_oSQL:_sQuery +=    " AND CTG_FILIAL = '" + xfilial ("CTG") + "'"
		_oSQL:_sQuery +=    " AND CTG_EXERC  = '" + substr (dtos (mv_par01), 1, 4) + "'"
		_oSQL:_sQuery +=    " AND CTG_PERIOD = '" + substr (dtos (mv_par01), 5, 2) + "'"
		_oSQL:_sQuery +=    " AND CTG_STATUS = '1'"
		_oSQL:Log ()
		if _oSQL:RetQry () != 1
			u_help ("Processo nao pode ser realizado neste momento por que o periodo solicitado nao se encontra 'aberto' no calendario contabil.",, .t.)
			_lRet = .F.
		endif
	endif
return _lRet


// --------------------------------------------------------------------------
// Geracao
Static Function _Gera ()
	local _aNFEntr  := {}
	local _nNFeAC   := 0
	local _nNFeANC  := 0
	local _nPercCom := 0
	local _oSQL     := NIL
//	local _sQrySld  := ''

	procregua (10)
	incproc ("Buscando dados de compras")
	_oSQL := ClsSQL ():New ()
	_oSQL:_sQuery := ""
	_oSQL:_sQuery += " WITH C AS ("
	_oSQL:_sQuery += " SELECT D1_DOC, D1_SERIE, D1_FORNECE, D1_LOJA, D1_CUSTO"
	_oSQL:_sQuery +=       " ,CASE WHEN dbo.VA_ASSOC_DT_ENTRADA(D1_FORNECE, D1_LOJA, D1_DTDIGIT) != ''"
	_oSQL:_sQuery +=           " THEN 'S'"
	_oSQL:_sQuery +=           " ELSE 'N'"
	_oSQL:_sQuery +=        " END AS ATO_COOP"
	_oSQL:_sQuery += " FROM " + RetSQLName ("SD1") + " SD1 "
	_oSQL:_sQuery +=    " LEFT JOIN " + RetSQLName ("SB1") + " SB1 "
	_oSQL:_sQuery +=        " ON (SB1.D_E_L_E_T_ = '' "
	_oSQL:_sQuery +=        " AND SB1.B1_FILIAL = '" + xfilial ("SB1") + "'"
	_oSQL:_sQuery +=        " AND SB1.B1_COD    = SD1.D1_COD) "
	_oSQL:_sQuery +=    " INNER JOIN " + RetSQLName ("SB5") + " SB5 "
	_oSQL:_sQuery +=        " ON (SB5.D_E_L_E_T_ = '' "
	_oSQL:_sQuery +=        " AND SB5.B5_FILIAL  = SB1.B1_FILIAL "
	_oSQL:_sQuery +=        " AND SB5.B5_COD     = SB1.B1_COD "
	_oSQL:_sQuery +=        " AND SB5.B5_VASISDE = 'S') "
	_oSQL:_sQuery += " WHERE SD1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery += " AND SD1.D1_DTDIGIT BETWEEN '" + dtos (firstday (mv_par01)) + "' AND '" + dtos (lastday (mv_par01)) + "'"
	_oSQL:_sQuery += " AND SD1.D1_TP IN ('MP', 'VD') "
	_oSQL:_sQuery += " AND SD1.D1_TIPO NOT IN ('B', 'D') "
	_oSQL:_sQuery += " AND SD1.D1_CF NOT IN ('1902', '1925', '1151', '2151', '1352', '1903', '2903', '2352','1352' ) "
	_oSQL:_sQuery += " AND (SD1.D1_CF <> '1949' OR (SD1.D1_CF = '1949' AND SD1.D1_FILIAL='03' AND SD1.D1_FORNECE='001369')) "
	_oSQL:_sQuery += " )"
	_oSQL:_sQuery += " SELECT SUM (D1_CUSTO) AS TOT_GER"
	_oSQL:_sQuery +=       ", SUM (CASE WHEN ATO_COOP = 'N' THEN D1_CUSTO ELSE 0 END) AS TOT_ANC"
	_oSQL:_sQuery += " FROM C"
	_oSQL:Log ('[' + procname () + ']')
	_aNFEntr = aclone (_oSQL:Qry2Array (.F., .F.))
	U_Log2 ('debug', _aNFEntr)
	_nNFeANC = _aNFEntr [1, 2]
	_nNFeAC  = _aNFEntr [1, 1] - _nNFeANC
	_nPercCom = _nNFeANC * 100 / (_nNFeANC + _nNFeAC)
	U_Log2 ('info', '[' + procname () + ']Aquisicao de MP+VD de terceiros..: ' + transform (_nNFeANC,           "@E 999,999,999.99"))
	U_Log2 ('info', '[' + procname () + ']Aquisicao de MP+VD total.........: ' + transform (_nNFeANC + _nNFeAC, "@E 999,999,999.99"))
	U_Log2 ('info', '[' + procname () + ']Percentual de Ato Nao Cooperativo: ' + transform (_nPercCom,          "@E 999,999,999.99"))


/*
	// Deixa pronto um trecho de SQL que vai servir para buscar saldos
	// contabeis para diferentes grupos de contas.
	_sQrySld := "SELECT CT1_CONTA, CT1_DESC01, CONTAC, CONTAD"
	_sQrySld +=      ", SUM (CQ3_DEBITO - CQ3_CREDIT) AS SALDO"
	_sQrySld +=  " FROM CONTAS"
	_sQrySld +=     ", " + RetSQLName ("CQ3") + " CQ3 "
	_sQrySld += " WHERE CQ3.D_E_L_E_T_ = ''"
	_sQrySld +=   " AND CQ3.CQ3_FILIAL = '" + xfilial ("CQ3") + "'"
	_sQrySld +=   " AND CQ3.CQ3_CONTA  = CONTAS.CT1_CONTA"
	_sQrySld +=   " AND CQ3.CQ3_TPSALD = '1'"  // Realizado
	_sQrySld +=   " AND CQ3.CQ3_LP    != 'Z'"  // IGNORAR AS CONTAS DE ZERAMENTO (VIRADA DE EXERCICIO)
	_sQrySld +=   " AND CQ3.CQ3_DATA   BETWEEN '" + left (dtos (mv_par01), 4) + "0101' AND '" + dtos (lastday (mv_par01)) + "'"
	_sQrySld += " GROUP BY CT1_CONTA, CT1_DESC01, CONTAC, CONTAD"
*/

	// Preciso buscar saldo acumulado (do inicio do ano) de contas especificas
	// para efetuar rateios em diferentes momentos. Cada grupo de contas deve
	// ser contabilizado em contas especificas, entao jah deixo agrupadas.
	U_HELP ('CONFERIR CONTA FINAL COM A SARA')
	_oSQL := ClsSQL ():New ()
	_oSQL:_sQuery := "WITH CONTAS AS ("  // Cria uma CTE com a lista de contas
	
	// Receitas Mercado Interno Produtos
	_oSQL:_sQuery += " SELECT 1 AS MOMENTO, CT1_CONTA, CT1_DESC01, '401010201001' AS CONTAC, '401010101099' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=    " AND (CT1.CT1_CONTA BETWEEN '401010101001' AND '401010101009'"
	_oSQL:_sQuery +=      " OR CT1.CT1_CONTA = '401010101099')"

	// ICMS
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 1 AS MOMENTO, CT1_CONTA, CT1_DESC01, '401010102094' AS CONTAC, '401010202001' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=    " AND CT1.CT1_CONTA IN ('401010102001', '401010102090', '401010102094')"

	// IPI
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 1 AS MOMENTO, CT1_CONTA, CT1_DESC01, '401010102095' AS CONTAC, '401010202005' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=    " AND CT1.CT1_CONTA IN ('401010102002', '401010102095')"

	// PIS
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 1 AS MOMENTO, CT1_CONTA, CT1_DESC01, '401010102096' AS CONTAC, '401010202002' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=    " AND CT1.CT1_CONTA IN ('401010102003', '401010102091', '401010102096')"

	// COFINS
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 1 AS MOMENTO, CT1_CONTA, CT1_DESC01, '401010102097' AS CONTAC, '401010202003' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=    " AND CT1.CT1_CONTA IN ('401010102004', '401010102092', '401010102097')"

	// ICMSST
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 1 AS MOMENTO, CT1_CONTA, CT1_DESC01, '401010102098' AS CONTAC, '401010202004' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=    " AND CT1.CT1_CONTA IN ('401010102005', '401010102098')"

	// CPV terceiros
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 1 AS MOMENTO, CT1_CONTA, CT1_DESC01, '402010101099' AS CONTAC, '401010202004' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=    " AND CT1.CT1_CONTA IN ('402010101001', '402010101099')"
	
	//
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 2 AS MOMENTO, CT1_CONTA, CT1_DESC01, '403010199001' AS CONTAC, '403020101001' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=   " AND (CT1.CT1_CONTA BETWEEN '403010101001' AND '403010104007' OR CT1.CT1_CONTA in ('403010199001'))"

	//
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 2 AS MOMENTO, CT1_CONTA, CT1_DESC01, '403010299001' AS CONTAC, '403020101002' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=   " AND (CT1.CT1_CONTA BETWEEN '403010201001' AND '403010201059' OR CT1.CT1_CONTA in ('403010204001', '403010501001', '403010701001', '403010299001'))"

	//
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 2 AS MOMENTO, CT1_CONTA, CT1_DESC01, '403010399001' AS CONTAC, '403020101003' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=   " AND (CT1.CT1_CONTA BETWEEN '403010301004' AND '403010301008' OR CT1.CT1_CONTA in ('403010399001'))"

	//
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 2 AS MOMENTO, CT1_CONTA, CT1_DESC01, '403010499001' AS CONTAC, '403020101004' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=   " AND (CT1.CT1_CONTA BETWEEN '403010401001' AND '403010401052' OR CT1.CT1_CONTA in ('403010499001'))"

	//
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 2 AS MOMENTO, CT1_CONTA, CT1_DESC01, '405010102001' AS CONTAC, '405010101099' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=   " AND (CT1.CT1_CONTA BETWEEN '405010101002' AND '405010101020' OR CT1.CT1_CONTA in ('405010101099'))"

	//
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 2 AS MOMENTO, CT1_CONTA, CT1_DESC01, '405010201099' AS CONTAC, '405010202099' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=   " AND (CT1.CT1_CONTA BETWEEN '405010201002' AND '405010201004' OR CT1.CT1_CONTA in ('405010201099'))"

	//
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 2 AS MOMENTO, CT1_CONTA, CT1_DESC01, '406010201099' AS CONTAC, '406010101099' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=   " AND (CT1.CT1_CONTA BETWEEN '406010101001' AND '406010101003' OR CT1.CT1_CONTA in ('406010101099'))"

	//
	_oSQL:_sQuery += " UNION ALL "
	_oSQL:_sQuery += " SELECT 2 AS MOMENTO, CT1_CONTA, CT1_DESC01, '406020101099' AS CONTAC, '406020201099' AS CONTAD"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=   " AND (CT1.CT1_CONTA BETWEEN '406020101001' AND '406020101008' OR CT1.CT1_CONTA in ('406020101099'))"

	_oSQL:_sQuery += ")"
	_oSQL:_sQuery += "SELECT MOMENTO, CT1_CONTA, CT1_DESC01, CONTAC, CONTAD"
	_oSQL:_sQuery +=      ", SUM (CQ3_DEBITO - CQ3_CREDIT) AS SALDO"
	_oSQL:_sQuery +=  " FROM CONTAS"
	_oSQL:_sQuery +=     ", " + RetSQLName ("CQ3") + " CQ3 "
	_oSQL:_sQuery += " WHERE CQ3.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=   " AND CQ3.CQ3_FILIAL = '" + xfilial ("CQ3") + "'"
	_oSQL:_sQuery +=   " AND CQ3.CQ3_CONTA  = CONTAS.CT1_CONTA"
	_oSQL:_sQuery +=   " AND CQ3.CQ3_TPSALD = '1'"  // Realizado
	_oSQL:_sQuery +=   " AND CQ3.CQ3_LP    != 'Z'"  // IGNORAR AS CONTAS DE ZERAMENTO (VIRADA DE EXERCICIO)
	_oSQL:_sQuery +=   " AND CQ3.CQ3_DATA   BETWEEN '" + left (dtos (mv_par01), 4) + "0101' AND '" + dtos (lastday (mv_par01)) + "'"
	_oSQL:_sQuery += " GROUP BY MOMENTO, CT1_CONTA, CT1_DESC01, CONTAC, CONTAD"
	_oSQL:Log ('[' + procname () + ']')
	U_Log2 ('debug', _oSQL:Qry2Array (.f., .f.))

/*
	// Busca saldo acumulado (do inicio do ano) de contas especificas para
	// aplicar o segundo passo da contabilizacao.
	_oSQL := ClsSQL ():New ()
	_oSQL:_sQuery := "WITH CONTAS AS"  // Cria uma CTE com a lista de contas
	_oSQL:_sQuery += "(SELECT CT1_CONTA, CT1_DESC01"
	_oSQL:_sQuery +=   " FROM " + RetSQLName ("CT1") + " CT1"
	_oSQL:_sQuery +=  " WHERE CT1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=    " AND CT1.CT1_FILIAL = '" + xfilial ("CT1") + "'"
	_oSQL:_sQuery +=    " AND (CT1.CT1_CONTA BETWEEN '403010101001' AND '403010104007' OR CT1.CT1_CONTA in ('403010199001')"
	_oSQL:_sQuery +=      " OR CT1.CT1_CONTA BETWEEN '403010201001' AND '403010201059' OR CT1.CT1_CONTA in ('403010204001', '403010501001', '403010701001', '403010299001')"
	_oSQL:_sQuery +=      " OR CT1.CT1_CONTA BETWEEN '403010301004' AND '403010301008' OR CT1.CT1_CONTA in ('403010399001')"
	_oSQL:_sQuery +=      " OR CT1.CT1_CONTA BETWEEN '403010401001' AND '403010401052' OR CT1.CT1_CONTA in ('403010499001')"
	_oSQL:_sQuery +=      " OR CT1.CT1_CONTA BETWEEN '405010101002' AND '405010101020' OR CT1.CT1_CONTA in ('405010101099')"
	_oSQL:_sQuery +=      " OR CT1.CT1_CONTA BETWEEN '405010201002' AND '405010201004' OR CT1.CT1_CONTA in ('405010201099')"
	_oSQL:_sQuery +=      " OR CT1.CT1_CONTA BETWEEN '406010101001' AND '406010101003' OR CT1.CT1_CONTA in ('406010101099')"
	_oSQL:_sQuery +=      " OR CT1.CT1_CONTA BETWEEN '406020101001' AND '406020101008' OR CT1.CT1_CONTA in ('406020101099')"
	_oSQL:_sQuery +=         ")"
	_oSQL:_sQuery += ")"
	_oSQL:_sQuery += _sQrySld
	_oSQL:Log ('[' + procname () + ']')
	U_Log2 ('debug', _oSQL:Qry2Array (.f., .f.))
*/
return

// --------------------------------------------------------------------------
// Cria Perguntas no SX1
Static Function _ValidPerg ()
	local _aRegsPerg := {}
	local _aDefaults := {}
	
	//                 Ordem Descri                          tipo tam           dec          valid    F3     opcoes (combo)                                 help
	aadd (_aRegsPerg, {01, "Data final mes a contabilizar ", "D", 8,             0,            "",   "   ",  {},                                            ""})
	U_ValPerg (cPerg, _aRegsPerg, {}, _aDefaults)
Return
