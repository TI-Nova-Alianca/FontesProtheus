// Programa:   PECTe006
// Autor:      Robert Koch
// Data:       07/06/2022
// Descricao:  Ponto de entrada no fonte FBTRS006 (importador de XML da Totvs RS)
//             Permite manipulacao dos dados de cabecalho e linha para execauto.

// Tags para automatizar catalogo de customizacoes:
// #TipoDePrograma    #Ponto_de_entrada
// #Descricao         #Ponto de entrada no fonte FBTRS006 (importador de XML da Totvs RS). Permite manipulacao dos dados de cabecalho e linha para execauto.
// #PalavasChave      #ponto_entrada #importador_XML #frete_sobre_venda
// #TabelasPrincipais #SD1 #SF1
// #Modulos           #COM #EST

// Historico de alteracoes:
// 10/07/2022 - Robert - Versao inicial para buscar NF referenciadas pelos CTes (GLPI 12330)
// 20/07/2022 - Robert  - Gravacao de eventos temporarios para rastreio de import/export. XML (GLPI 12336)
//


// --------------------------------------------------------------------------
user function PECTE006 ()
	local _aAreaAnt := U_ML_SRArea ()
	local _aAmbAnt  := U_SalvaAmb ()
	local _aRetTRS6 := {}
	Local _aTRS006  := PARAMIXB
	Local _aCabec   := _aTRS006[1]  // Vetor com Cabecaho repassado  para Execauto
	Local _aLinhas  := _aTRS006[2]  // Vetor com Itens    repassados para Execauto
	Local _sChvCte  := _aTRS006[3]  // Caracter com Chave do CTe
	//Local _nTpoCte  := _aTRS006[4]  // Numerico com valor: 2=MATA116 Compras | 1=MATA140 Vendas
	Local _oNfeOrg  := iif (len (_aTRS006) >= 5, _aTRS006[5], NIL)  // Objeto com Notas Referenciadas (nao presente em caso de exclusao)
	local _oEvento  := NIL

	// Tratamento para alimentar variavel a ser usada para gravacao de fretes.
	if inclui .or. altera  // 'importar XML'=inclui; 'reprocessa'=altera
		_NfOriFrt (_aCabec, _oNfeOrg)
	endif

	// Grava evento temporario para rastreio de eventuais chaves perdidas
	if inclui
		_oEvento := ClsEvent():new ()
		_oEvento:CodEven   = "ZBE001"
		_oEvento:Texto     = "Incluindo chave CTE"
		_oEvento:ChaveNFe  = _sChvCte
		_oEvento:DiasValid = 60  // Manter o evento por alguns dias, depois disso vai ser deletado.
		_oEvento:Grava ()
	endif
	if altera
		_oEvento := ClsEvent():new ()
		_oEvento:CodEven   = "ZBE001"
		_oEvento:Texto     = "Reprocessando chave CTE"
		_oEvento:ChaveNFe  = _sChvCte
		_oEvento:DiasValid = 60  // Manter o evento por alguns dias, depois disso vai ser deletado.
		_oEvento:Grava ()
	endif
	if !inclui .and. !altera
		_oEvento := ClsEvent():new ()
		_oEvento:CodEven   = "ZBE001"
		_oEvento:Texto     = "Excluindo chave CTE"
		_oEvento:ChaveNFe  = _sChvCte
		_oEvento:DiasValid = 60  // Manter o evento por alguns dias, depois disso vai ser deletado.
		_oEvento:Grava ()
	endif

	// Devem ser retornados cabecalho e itens.
	_aRetTRS6 := {_aCabec,_aLinhas}

	U_SalvaAmb (_aAmbAnt)
	U_ML_SRArea (_aAreaAnt)
return _aRetTRS6


// --------------------------------------------------------------------------
static function _NfOriFrt (_aCabec, _oNfeOrg)
	local _aNFRef   := {}
	local _nNFRef   := 0
	local _oSQL     := NIL
	local _aRetQ    := {}
	local _nPosForn := ascan (_aCabec, {|_aVal| alltrim (upper (_aVal [1])) = "F1_FORNECE"})
	local _nPosLoja := ascan (_aCabec, {|_aVal| alltrim (upper (_aVal [1])) = "F1_LOJA"})

	u_logPCham ()

	// Cria/popula objeto a ser usado por outros pontos de entrada para gravacao
	// de dados de fretes.
	if type ("_oClsFrtFr") != "O"
		U_Log2 ('aviso', '[' + procname () + ']Objeto para frete nao existe. Criando.')
		public _oClsFrtFr := ClsFrtFr():New ()
	endif
	U_Log2 ('debug', '[' + procname () + ']' + cvaltochar (_nPosForn))
	U_Log2 ('debug', '[' + procname () + ']' + cvaltochar (_nPosLoja))
	_oClsFrtFr:_sFornece  = _aCabec [_nPosForn, 2]
	_oClsFrtFr:_sLoja     = _aCabec [_nPosLoja, 2]

//	u_log (_oNfeOrg)

	// Varre a lista de chaves referenciadas e verifica se sao nossas notas
	// de saida (frete sobre vendas). Se forem, acrescenta os numeros dessas
	// notas `a array de notas `as quais o frete se refere.
	_aNFRef = {}
	for _nNFRef = 1 to len (_oNfeOrg)
		U_Log2 ('debug', '[' + procname () + ']Lendo chave referenciada numero ' + cvaltochar (_nNFRef))
		aadd (_aNFRef, {_oNfeOrg [_nNFRef]:_Chave:TEXT})

		_oSQL := ClsSQL ():New ()
		_oSQL:_sQuery := ""
		_oSQL:_sQuery += "SELECT top 1 F2_DOC, F2_SERIE"
		_oSQL:_sQuery +=  " FROM " + RetSQLName ("SF2") + " SF2"
		_oSQL:_sQuery += " WHERE SF2.D_E_L_E_T_ = ''"
		_oSQL:_sQuery +=   " AND SF2.F2_FILIAL  = '" + xfilial ("SF2") + "'"
		_oSQL:_sQuery +=   " AND SF2.F2_CHVNFE  = '" + _oNfeOrg [_nNFRef]:_Chave:TEXT + "'"
		_oSQL:Log ('[' + procname () + ']')
		_aRetQ := aclone (_oSQL:Qry2Array (.f., .f.))
		U_Log2 ('debug', _aRetQ)
	//	u_showarray (_aRetQ)
		if len (_aRetQ) == 1
			U_Log2 ('debug', '[' + procname () + ']Adicionando na array _aNaoPrev')
			aadd (_oClsFrtFr:_aNaoPrev, array (3))
			_oClsFrtFr:_aNaoPrev [len (_oClsFrtFr:_aNaoPrev), 1] = _aRetQ [1, 1]  // documento
			_oClsFrtFr:_aNaoPrev [len (_oClsFrtFr:_aNaoPrev), 2] = _aRetQ [1, 2]  // serie
			_oClsFrtFr:_aNaoPrev [len (_oClsFrtFr:_aNaoPrev), 3] = '1'  // Campo ZH_TPDESP - Tipo de servico (1=Entrega;2=Reentrega;3=Redespacho;4=Paletizacao;5=Frete sobre devolucoes)
		endif
	next
	U_Log2 ('debug', '[' + procname () + ']_oClsFrtFr:_sFornece = ' + _oClsFrtFr:_sFornece)
	U_Log2 ('debug', '[' + procname () + ']_oClsFrtFr:_sLoja    = ' + _oClsFrtFr:_sLoja)
	U_Log2 ('debug', '[' + procname () + ']_oClsFrtFr:_aNaoPrev:')
	U_Log2 ('debug', _oClsFrtFr:_aNaoPrev)
return
