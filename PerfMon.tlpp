// Programa:  PerfMon
// Autor:     Robert Koch
// Data:      12/02/2021
// Descricao: Auxiliar para monitoramento de performance - calculo e gravacao de tempos (GLPI 9409)

// Tags para automatizar catalogo de customizacoes:
// #TipoDePrograma    #Processamento
// #Descricao         #Auxiliar para monitoramento de performance (calculo e gravacao de tempos.
// #PalavasChave      #auxiliar #uso_generico #monitor #performance
// #TabelasPrincipais #
// #Modulos           #todos_modulos

// Historico de alteracoes:
// 19/02/2021 - Robert - Passa a gravar nome do usuario
//                     - A cada chamada de inicio, inseria uma linha na array _aPerfMon (GLPI 9409).
// 08/04/2021 - Robert - Removidos logs de depuracao (GLPI 9409)
// 09/04/2021 - Robert - Criada opcao 'L' para apenas gravar em log, sem persistir no banco de dados.
// 03/05/2021 - Robert - Criado tratamento para quando virar a meia noite.
// 01/05/2022 - Robert - Retorna o tempo total ao final do processo (caso a rotina chamadora queira usar).
// 30/08/2022 - Robert - Atributo ClsAviso:DestinAvis passa a ser tipo string.
// 01/09/2022 - Robert - Melhorias ClsAviso.
// 06/01/2023 - Robert - Pode mostrar observacoes, caso enviadas pela rotina chamadora.
//

// --------------------------------------------------------------------------
user function PerfMon (_sQueFazer, _sChvPerf, _sObsPerf)
	local _nPosPerf := 0
	local _oSQL     := NIL
	local _oAviso   := NIL
	local _aAreaAnt := U_ML_SRArea ()
	local _nRetPerf := 0

	if _sQueFazer == 'I'  // Inicio de contagem de tempo
		//U_Log2 ('debug', 'Iniciando chave ' + _sChvPerf)
		// Declara a varievael com 'public' para ser vista por outros pontos de entrada.
		if type ('_aPerfMon') != 'A'
			public _aPerfMon := {}
		endif
		
		// Se a chave jah existir na array, atualiza-a. Pode ser util em casos onde um processo eh chamado dentro de outro,
		// por exemplo na geracao de contranotas de safra (chama rot.aut.do MATA103 como um todo) sendo que, dentro
		// da execucao do MATA103, jah tem os P.E. MT100GRV e MT100AGR fazendo sua propria marcacao de tempos.
		_nPosPerf = ascan (_aPerfMon, {|_aVal| _aVal [1] == _sChvPerf})
		if _nPosPerf == 0
			aadd (_aPerfMon, {_sChvPerf, seconds (), 0})
		else
			_aPerfMon [_nPosPerf, 2] = seconds ()
		endif
		//U_Log2 ('debug', _aPerfMon)

	elseif _sQueFazer $ 'F/L'  // Fim de contagem de tempo: F=Fim(gravar na tabela) ou L=Log(apenas mostrar no log)
		if type ('_aPerfMon') == 'A'
			//U_Log2 ('debug', 'Finalizando chave ' + _sChvPerf)
			//U_Log2 ('debug', _aPerfMon)
			_nPosPerf = ascan (_aPerfMon, {|_aVal| _aVal [1] == _sChvPerf})
			if _nPosPerf == 0
				U_Log2 ('aviso', "[" + procname () + "]Chave '" + _sChvPerf + "' nao localizada na array de chaves de medicao de performance.")
			else
				// Se fim < inicio, entendo que o processo iniciou antes da meia noite e terminou depois.
				if _aPerfMon [_nPosPerf, 2] > seconds ()
					_aPerfMon [_nPosPerf, 3] = 86400 - _aPerfMon [_nPosPerf, 2] + seconds ()
				else
					_aPerfMon [_nPosPerf, 3] = seconds () - _aPerfMon [_nPosPerf, 2]
				endif
				_nRetPerf = _aPerfMon [_nPosPerf, 3]
				if _sQueFazer == 'L'
					U_Log2 ('info', '[' + procname () + ']Tempo execucao chave ' + _sChvPerf + ': ' + cvaltochar (_aPerfMon [_nPosPerf, 3]) + ' segundos. ' + iif (_sObsPerf != NIL, cvaltochar (_sObsPerf), ''))
				endif

				if _sQueFazer == 'F'  // Vou persistir em disco
					if len (_sChvPerf) > 25  // Deve estar de acordo com o campo CHAVE da tabela VA_PERFMON
						_oAviso := ClsAviso ():New ()
						_oAviso:Tipo       = 'E'
						_oAviso:DestinAvis = 'robert.koch'
						_oAviso:Texto      = "Chave de medicao de performance '" + _sChvPerf + "' excedeu tamanho maximo.'
						_oAviso:Origem     = procname ()
						_oAviso:Grava ()
					else
						/*
						CREATE TABLE [dbo].[VA_PERFMON](
							[DTHR] [datetime] NULL DEFAULT (getdate()),
							[CHAVE] [varchar](25) NULL,
							[SEGUNDOS] [float] NULL,
							[USUARIO] varchar (15) NULL
						*/
						_oSQL := ClsSQL():New ()
						_oSQL:_sQuery := "INSERT INTO VA_PERFMON (CHAVE, SEGUNDOS, USUARIO)"
						_oSQL:_sQuery += " VALUES ("
						_oSQL:_sQuery +=           "'" + _sChvPerf + "'"
						_oSQL:_sQuery +=           "," + cValToChar (_aPerfMon [_nPosPerf, 3])
						_oSQL:_sQuery +=           ",'" + left (cUserName, 15) + "'"
						_oSQL:_sQuery +=         ")"
						//_oSQL:Log ()
						_oSQL:Exec ()
					endif
				endif
			endif
		else
			U_Log2 ('aviso', "[" + procname () + "]Tempo execucao chave '" + _sChvPerf + "' nao pode ser medido por que nao existe em memoria a array de chaves de medicao de performance.")
		endif
	endif
	U_ML_SRArea (_aAreaAnt)
return _nRetPerf
