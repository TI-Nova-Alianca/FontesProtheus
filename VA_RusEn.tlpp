// Programa...: VA_RusEn
// Autor......: Robert Koch
// Data.......: 01/02/2021
// Descricao..: Endereca (no estoque) os lotes de uva gerados pela contranota de entrada (GLPI 8779)
//
// Historico de alteracoes:
// 09/01/2022 - Robert - Rotina automatica passou a pedir o campo DB_ITEM.
//

// ------------------------------------------------------------------------------------
User Function VA_RusEn (_sDoc, _sSerie, _sFornece, _sLoja)
	local _aAreaAnt  := U_ML_SRArea ()
	local _oSQL      := NIL
	local _aRegSDA   := {}
	local _nRegSDA   := 0
	local _aAutoSDA  := {}
	local _aAutoSDB  := {}
	local _aLinhaSDB := {}

	U_Log2 ('info', 'Iniciando ' + procname ())

	_oSQL := ClsSQL ():New ()
	_oSQL:_sQuery := ""
	_oSQL:_sQuery += "SELECT SDA.R_E_C_N_O_"
	_oSQL:_sQuery +=  " FROM " + RetSQLName ("SD1") + " SD1, "
	_oSQL:_sQuery +=             RetSQLName ("SDA") + " SDA "
	_oSQL:_sQuery += " WHERE SD1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=   " AND SD1.D1_FILIAL  = '" + xfilial ("SD1") + "'"
	_oSQL:_sQuery +=   " AND SD1.D1_DOC     = '" + _sDoc + "'"
	_oSQL:_sQuery +=   " AND SD1.D1_SERIE   = '" + _sSerie + "'"
	_oSQL:_sQuery +=   " AND SD1.D1_FORNECE = '" + _sFornece + "'"
	_oSQL:_sQuery +=   " AND SD1.D1_LOJA    = '" + _sLoja + "'"
	_oSQL:_sQuery +=   " AND SDA.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=   " AND SDA.DA_FILIAL  = SD1.D1_FILIAL"
	_oSQL:_sQuery +=   " AND SDA.DA_DOC     = SD1.D1_DOC"
	_oSQL:_sQuery +=   " AND SDA.DA_SERIE   = SD1.D1_SERIE"
	_oSQL:_sQuery +=   " AND SDA.DA_CLIFOR  = SD1.D1_FORNECE"
	_oSQL:_sQuery +=   " AND SDA.DA_LOJA    = SD1.D1_LOJA"
	_oSQL:_sQuery +=   " AND SDA.DA_ORIGEM  = 'SD1'"
	_oSQL:_sQuery +=   " AND SDA.DA_NUMSEQ  = SD1.D1_NUMSEQ"
	_oSQL:_sQuery +=   " AND SDA.DA_PRODUTO = SD1.D1_COD"
	_oSQL:_sQuery +=   " AND SDA.DA_SALDO   > 0"
	_oSQL:Log ()
	_aRegSDA = _oSQL:Qry2Array (.F., .F.)
	if len (_aRegSDA) == 0
		u_help ("Nenhum produto com saldo a enderecar para esta carga/contranota.")
	endif
	for _nRegSDA = 1 to len (_aRegSDA)
		sda -> (dbgoto (_aRegSDA [_nRegSDA, 1]))
		_aAutoSDA = {}
		aadd (_aAutoSDA, {"DA_PRODUTO", sda -> da_produto, nil})
		aadd (_aAutoSDA, {"DA_LOCAL"  , SDA->DA_LOCAL    , nil})
		aadd (_aAutoSDA, {"DA_NUMSEQ" , SDA->DA_NUMSEQ   , nil})
		aadd (_aAutoSDA, {"DA_DOC"    , SDA->DA_DOC      , nil})
		aadd (_aAutoSDA, {"DA_SERIE"  , SDA->DA_SERIE    , nil})

		_aAutoSDB = {}
		_aLinhaSDB = {}
		aadd (_aLinhaSDB, {"DB_ITEM", '0001', nil})
		if cFilAnt == '01'
			aadd (_aLinhaSDB, {"DB_LOCALIZ", 'T01PCP03       ', nil})
		elseif cFilAnt == '03'
			aadd (_aLinhaSDB, {"DB_LOCALIZ", 'T03 PCP AX 03  ', nil})
		elseif cFilAnt == '07'
			aadd (_aLinhaSDB, {"DB_LOCALIZ", 'T07 PCP 03     ', nil})
		elseif cFilAnt == '09'
			aadd (_aLinhaSDB, {"DB_LOCALIZ", 'T09 PCP AX 03  ', nil})
		endif
		aadd (_aLinhaSDB, {"DB_QUANT"  , SDA->DA_QTDORI   , nil})
	//	aadd (_aLinhaSDB, {"DB_NUMSEQ" , SDA->DA_NUMSEQ   , nil},; 
		aadd (_aLinhaSDB, {"DB_DATA"   , dDATABASE        , nil})
		U_Log2 ('info', 'Enderecando docto ' + sda -> da_doc + ' / produto ' + sda -> da_produto + ' para ' + _aLinhaSDB [1, 2])
		_aLinhaSDB = aclone (U_OrdAuto (_aLinhaSDB))
		aadd (_aAutoSDB, aclone (_aLinhaSDB))
		lMsErroAuto := .F.
		MSExecAuto({|x,y,z| mata265(x,y,z)}, _aAutoSDA, _aAutoSDB, 3)
		If lMsErroAuto
			u_log2 ('erro', 'lMsErroAuto')
			if ! empty (NomeAutoLog ())
				u_log2 ('erro', memoread (NomeAutoLog ()))
				MostraErro()
			else
				u_help ("Nao foi possivel ler o arquivo de log de erros da rotina de enderecamento de uva no estoque.")
			endif
		endif
	next
	U_ML_SRArea (_aAreaAnt)
return
