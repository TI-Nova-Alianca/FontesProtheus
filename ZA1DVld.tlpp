// Programa...: ZA1DVld
// Autor......: Robert Koch
// Data.......: 27/03/2022
// Descricao..: Busca/calcula a data de validade do lote para uso em etiquetas de entrada no FullWMS - GLPI 11825.

// Tags para automatizar catalogo de customizacoes:
// #TipoDePrograma    #Processamento
// #Descricao         #Busca/calcula a data de validade do lote para uso em etiquetas de entrada no FullWMS.
// #PalavasChave      #etiqueta #FullWMS #prazo_validade
// #TabelasPrincipais #ZA1
// #Modulos           #PCP

// Historico de alteracoes
//

// ------------------------------------------------------------------------------------
user function ZA1DVld (_sEtiq)
	Local _aAreaAnt  := U_ML_SRArea ()
	local _oSQL      := NIL
	local _lContinua := .T.
	local _dValid    := ctod ('')
	local _aLoteNF   := {}
	local _aLoteZAG  := {}

	u_log2 ('info', 'Verificando data de validade para a etiqueta ' + _sEtiq + '.')

	if _lContinua
		za1 -> (dbsetorder (1))  // ZA1_FILIAL+ZA1_CODIGO+ZA1_DATA+ZA1_OP
		if ! za1 -> (dbseek (xfilial ("ZA1") + _sEtiq, .F.))
			u_help ("Impossivel buscar a data de validade da etiqueta '" + _sEtiq + "': etiqueta nao cadastrada!",, .t.)
			_lContinua = .F.
		endif
	endif

	// Busca validade do lote conforme origem da etiqueta.
	if _lContinua
		if ! empty (za1 -> za1_op)  // Etiqueta gerada por apontamento de producao
			sc2 -> (dbsetorder (2))
			if ! sc2 -> (dbseek (xfilial ("SC2") + za1 -> za1_op, .f.))
				u_help ("Impossivel buscar a data de validade da etiqueta '" + _sEtiq + "': a OP referenciada (" + za1 -> za1_op + ") nao foi localizada!",, .t.)
				_lContinua = .F.
			else
				if sc2 -> c2_vaopesp == 'R'  // OP de reprocesso assume dt valid do lote original, cfe informada pelo usuario.
					if empty (sc2 -> c2_vadvori)
						u_help ("Impossivel buscar a data de validade da etiqueta '" + _sEtiq + "': a OP referenciada (" + za1 -> za1_op + ") eh uma OP de reprocesso, e nao foi informada a data de validade do lote original no campo C2_VADVORI (" + alltrim (rettitle ("C2_VADVORI")) + ").",, .t.)
						_lContinua = .F.
					else
						_dValid = sc2 -> c2_vadvori
					endif
				else
					_dValid = sc2 -> c2_datprf + sb1 -> b1_prvalid
				endif
			endif

		// Etiqueta gerada por entrada de NF
		elseif ! empty (za1 -> za1_doce)
			_oSQL := ClsSQL ():New ()
			_oSQL:_sQuery := "SELECT D1_LOTECTL, B8_DTVALID"
			_oSQL:_sQuery +=  " FROM " + RetSQLName ("SD1") + " SD1 "
			_oSQL:_sQuery +=  " LEFT JOIN " + RetSQLName ("SB8") + " SB8 "
			_oSQL:_sQuery +=       " ON (SB8.D_E_L_E_T_ = ''"
			_oSQL:_sQuery +=       " AND SB8.B8_FILIAL  = SD1.D1_FILIAL"
			_oSQL:_sQuery +=       " AND SB8.B8_LOTECTL = SD1.D1_LOTECTL"
			_oSQL:_sQuery +=       " AND SB8.B8_LOTEFOR = SD1.D1_LOTEFOR"
			_oSQL:_sQuery +=       " AND SB8.B8_PRODUTO = SD1.D1_COD"
			_oSQL:_sQuery +=       ")"
			_oSQL:_sQuery += " WHERE SD1.D_E_L_E_T_ = ''"
			_oSQL:_sQuery +=   " AND D1_FILIAL  = '" + za1 -> za1_filial + "'"
			_oSQL:_sQuery +=   " AND D1_DOC     = '" + za1 -> za1_doce   + "'"
			_oSQL:_sQuery +=   " AND D1_SERIE   = '" + za1 -> za1_seriee + "'"
			_oSQL:_sQuery +=   " AND D1_FORNECE = '" + za1 -> za1_fornec + "'"
			_oSQL:_sQuery +=   " AND D1_LOJA    = '" + za1 -> za1_lojaf  + "'"
			_oSQL:_sQuery +=   " AND D1_ITEM    = '" + za1 -> za1_item   + "'"
			_oSQL:_sQuery +=   " AND D1_COD     = '" + za1 -> za1_prod   + "'"
			_oSQL:Log ()
			_aLoteNF = aclone (_oSQL:Qry2Array ())
			if len (_aLoteNF) == 0
				u_help ("Impossivel buscar a data de validade da etiqueta '" + _sEtiq + "': a NF de entrada referenciada (" + za1 -> za1_doce + ") nao foi localizada.", _oSQL:_sQuery, .t.)
				_lContinua = .F.
			elseif len (_aLoteNF) == 1
				u_log2 ('debug', 'Encontrei a nota')
				_dValid = _aLoteNF [1, 2]
			elseif len (_aLoteNF) > 1
				u_help ("Impossivel buscar a data de validade da etiqueta '" + _sEtiq + "': encontrei MAIS DE UMA nota de entrada referenciada.", _oSQL:_sQuery, .t.)
				_lContinua = .F.
			endif

		// Etiqueta gerada por solicitacao manual de transferencia.
		elseif ! empty (za1 -> za1_idZAG)
			_oSQL := ClsSQL ():New ()
			_oSQL:_sQuery := "SELECT ZAG_LOTORI, B8_DTVALID, ZAG_ALMDST"
			_oSQL:_sQuery +=  " FROM " + RetSQLName ("ZAG") + " ZAG "
			_oSQL:_sQuery +=  " LEFT JOIN " + RetSQLName ("SB8") + " SB8 "
			_oSQL:_sQuery +=       " ON (SB8.D_E_L_E_T_ = ''"
			_oSQL:_sQuery +=       " AND SB8.B8_FILIAL  = ZAG.ZAG_FILORI"
			_oSQL:_sQuery +=       " AND SB8.B8_LOTECTL = ZAG.ZAG_LOTORI"
			_oSQL:_sQuery +=       " AND SB8.B8_LOCAL   = ZAG.ZAG_ALMORI"
			_oSQL:_sQuery +=       " AND SB8.B8_PRODUTO = ZAG.ZAG_PRDORI"
			_oSQL:_sQuery +=       ")"
			_oSQL:_sQuery += " WHERE ZAG.D_E_L_E_T_ = ''"
			_oSQL:_sQuery +=   " AND ZAG.ZAG_FILIAL = '" + xfilial ("ZAG") + "'"
			_oSQL:_sQuery +=   " AND ZAG.ZAG_DOC    = '" + za1 -> za1_idZAG + "'"
			_oSQL:Log ()
			_aLoteZAG = aclone (_oSQL:Qry2Array ())
			if len (_aLoteZAG) == 0
				u_help ("Impossivel buscar a data de validade da etiqueta '" + _sEtiq + "': a nao encontrei a solicitacao de transferencia '" + za1 -> za1_idZAG + "' referenciada por esta etiqueta.", _oSQL:_sQuery, .t.)
				_lContinua = .F.
			elseif len (_aLoteZAG) == 1
				u_log2 ('debug', 'Encontrei o ZAG e o SB8')
				_dValid = _aLoteZAG [1, 2]
			elseif len (_aLoteZAG) > 1
				u_help ("Impossivel buscar a data de validade da etiqueta '" + _sEtiq + "': encontrei MAIS DE UMA solicitacao de transferencia (ou mais de um lote) referenciada por esta etiqueta.", _oSQL:_sQuery, .t.)
				_lContinua = .F.
			endif
		endif
	endif

	if ! _lContinua
		_dValid = ctod ('')
	endif

	U_ML_SRArea (_aAreaAnt)
return _dValid
