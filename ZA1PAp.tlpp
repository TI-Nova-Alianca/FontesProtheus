// Programa...: ZA1PAp
// Autor......: Robert Koch
// Data.......: 25/03/2022
// Descricao..: Verifica se pode apontar uma etiqueta de producao - GLPI 11825.

// Tags para automatizar catalogo de customizacoes:
// #TipoDePrograma    #Processamento
// #Descricao         #Verifica se pode apontar uma etiqueta de producao, para posterior integracao com FullWMS
// #PalavasChave      #etiqueta #FullWMS
// #TabelasPrincipais #ZA1
// #Modulos           #PCP

// Historico de alteracoes
//

// ------------------------------------------------------------------------------------
user function ZA1PAp (_sEtiq, _sOP, _sProduto, _nQtProd, _nQtPerda, _sParcTot)
	Local _aAreaAnt  := U_ML_SRArea ()
	local _oSQL      := NIL
	local _aApontEtq := {}
	local _lContinua := .T.

	u_log2 ('info', 'Verificando se o apontamento de producao da etiqueta ' + _sEtiq + ' pode ser feito.')
	if _lContinua
		za1 -> (dbsetorder (1))  // ZA1_FILIAL+ZA1_CODIGO+ZA1_DATA+ZA1_OP
		if ! za1 -> (dbseek (xfilial ("ZA1") + _sEtiq, .F.))
			u_help ("Impossivel apontar producao da etiqueta '" + _sEtiq + "': etiqueta nao cadastrada!",, .t.)
			_lContinua = .F.
		else
			if za1 -> za1_impres != 'S'
				u_help ("Impossivel apontar producao da etiqueta '" + _sEtiq + "': ainda nao impressa.",, .t.)
				_lContinua = .f.
			endif
		endif
	endif

	if _lContinua
		_oSQL := ClsSQL():New ()
		_oSQL:_sQuery := "SELECT SUM (CASE WHEN D3_ESTORNO != 'S' THEN 1 ELSE 0 END) AS APONTAM"
		_oSQL:_sQuery +=      ", SUM (CASE WHEN D3_ESTORNO  = 'S' THEN 1 ELSE 0 END) AS ESTORNO"
		_oSQL:_sQuery +=  " FROM " + RetSQLName ("SD3") + " SD3 "
		_oSQL:_sQuery += " WHERE SD3.D_E_L_E_T_ = '' "
		_oSQL:_sQuery +=   " AND SD3.D3_FILIAL  = '" + xfilial ("SD3") + "'"
		_oSQL:_sQuery +=   " AND SD3.D3_VAETIQ  = '" + _sEtiq + "'"
		_oSQL:_sQuery +=   " AND SD3.D3_CF LIKE 'PR%'"
		_oSQL:Log ()
		_aApontEtq = aclone (_oSQL:Qry2Array (.f., .f.))
		if _aApontEtq [1, 1] > 0
			u_help ("Impossivel apontar producao da etiqueta '" + _sEtiq + "': ja gerou apontamento de producao.",, .t.)
			_lContinua = .f.
		endif
		if _aApontEtq [1, 2] > 0
			U_help ("Impossivel apontar producao da etiqueta '" + _sEtiq + "': ja foi apontada e ESTORNADA. Gere nova etiqueta.",, .t.)
			_lContinua = .F.
		endif
	endif

	if _lContinua .and. (_nQtProd + _nQtPerda) != za1 -> za1_quant
		u_help ("Impossivel apontar producao da etiqueta '" + _sEtiq + "': Quantidade produzida + perdida (" + cvaltochar (_nQtProd + _nQtPerda) + ") nao pode ser diferente da quantidade da etiqueta (" + cvaltochar (za1 -> za1_quant) + ").",, .t.)
		_lContinua = .F.
	endif

	if _lContinua .and. _sOP != za1 -> za1_op
		u_help ("Impossivel apontar producao da etiqueta '" + _sEtiq + "': O.P. informada (" + _sOP + ") nao pode ser diferente da O.P. relacionada com a etiqueta (" + za1 -> za1_op + ").",, .t.)
		_lContinua = .F.
	endif

	if _lContinua .and. _sProduto != za1 -> za1_prod
		u_help ("Impossivel apontar producao da etiqueta '" + _sEtiq + "': Produto nao pode ser diferente do produto da etiqueta (" + za1 -> za1_prod + ").",, .t.)
		_lContinua = .F.
	endif

	if _lContinua .and. _sParcTot != 'P'
		u_help ("Impossivel apontar producao da etiqueta '" + _sEtiq + "': Quando informada etiqueta, a producao deve ser sempre 'Parcial'. Para encerrar a OP use opcao 'Encerrar'.",, .t.)
		_lContinua = .F.
	endif

	// Se nao pode ser enviada para o FulLWMS, nem adianta apontar a producao.
	if _lContinua .and. ! U_ZA1PEF (_sEtiq)
		u_log2 ('erro', 'Apontamento de producao da etiqueta ' + _sEtiq + ' nao vai ser permitido por que ela nao pode ser enviada para o FullWMS.')
		_lContinua = .F.
	endif

	U_ML_SRArea (_aAreaAnt)
return _lContinua
