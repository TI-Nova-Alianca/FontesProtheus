// Programa...: VA_XLS60
// Autor......: Robert Koch
// Data.......: 18/07/2022
// Descricao..: Exporta Planilha com lctos contabeis de despesas.
//
// Tags para automatizar catalogo de customizacoes:
// #TipoDePrograma    #exporta_planilha
// #Descricao         #Exporta planilha com lctos contabeis de despesas, para analise gerencial.
// #PalavasChave      #CTB #contabilidade #lctos_contabeis_despesas
// #TabelasPrincipais #CT1 #CT2 #CTT
// #Modulos 		  #CTB
//
// Historico de alteracoes:
//

// --------------------------------------------------------------------------
User Function VA_XLS60 (_lAutomat)
	Local cCadastro := "Exporta planilha com lctos contabeis de despesas."
	Local aSays     := {}
	Local aButtons  := {}
	Local nOpca     := 0
	Local lPerg     := .F.
	private _lAuto   := iif (valtype (_lAutomat) == "L", _lAutomat, .F.)
	Private cPerg   := "VAXLS60"
	_ValidPerg()
	Pergunte(cPerg,.F.)

	if _lAuto != NIL .and. _lAuto
		Processa( { |lEnd| _Gera() } )
	else
		AADD(aSays,cCadastro)
		AADD(aSays,"")
		AADD(aSays,"")
		AADD(aButtons, { 5, .T.,{|| lPerg := Pergunte(cPerg,.T. ) } } )
		AADD(aButtons, { 1, .T.,{|| nOpca := If(( lPerg .Or. Pergunte(cPerg,.T.)) .And. _TudoOk() , 1, 2 ), If( nOpca == 1, FechaBatch(), Nil ) }})
		AADD(aButtons, { 2, .T.,{|| FechaBatch() }} )
		FormBatch( cCadastro, aSays, aButtons )
		If nOpca == 1
			Processa( { |lEnd| _Gera() } )
		Endif
	endif
return


// --------------------------------------------------------------------------
// 'Tudo OK' do FormBatch.
Static Function _TudoOk()
	Local _lRet     := .T.
Return _lRet


// --------------------------------------------------------------------------
Static Function _Gera()
	local _oSQL   := NIL

	procregua (10)
	incproc ("Gerando arquivo de exportacao")

	// Busca dados
	incproc ("Buscando dados")
	_oSQL := ClsSQL ():New ()
	_oSQL:_sQuery := ""
	_oSQL:_sQuery += " "
	_oSQL:_sQuery += " SELECT CT2_FILIAL AS FILIAL,"
	_oSQL:_sQuery +=        " SUBSTRING(CT2_DATA, 7, 2) + '/' + SUBSTRING(CT2_DATA, 5, 2) + '/' + SUBSTRING(CT2_DATA, 1, 4) AS DATA,"
	_oSQL:_sQuery +=        " CT2_DEBITO AS CTA_DEB,"
	_oSQL:_sQuery +=        " RTRIM (ISNULL (CT1D.CT1_DESC01, '')) AS DESC_CT_DB,"
	_oSQL:_sQuery +=        " CT2_VALOR AS VALOR,"
	_oSQL:_sQuery +=        " CT2_HIST +"
	_oSQL:_sQuery +=        " ISNULL("
	_oSQL:_sQuery +=               " ("
	_oSQL:_sQuery +=               "     SELECT CT2_HIST"
	_oSQL:_sQuery +=               "     FROM   CT2010 AS HIST1"
	_oSQL:_sQuery +=               "     WHERE  HIST1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_FILIAL = CT2.CT2_FILIAL"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_DATA = CT2.CT2_DATA"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_LOTE = CT2.CT2_LOTE"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_SBLOTE = CT2.CT2_SBLOTE"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_DOC = CT2.CT2_DOC"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_SEQLAN = CT2.CT2_SEQLAN"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_SEQUEN = CT2.CT2_SEQUEN"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_EMPORI = CT2.CT2_EMPORI"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_FILORI = CT2.CT2_FILORI"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_SEQHIS = '002'"
	_oSQL:_sQuery +=               " ),"
	_oSQL:_sQuery +=        "     ''"
	_oSQL:_sQuery +=        " ) +"
	_oSQL:_sQuery +=        " ISNULL("
	_oSQL:_sQuery +=               " ("
	_oSQL:_sQuery +=               "     SELECT CT2_HIST"
	_oSQL:_sQuery +=               "     FROM   CT2010 AS HIST1"
	_oSQL:_sQuery +=               "     WHERE  HIST1.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_FILIAL = CT2.CT2_FILIAL"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_DATA = CT2.CT2_DATA"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_LOTE = CT2.CT2_LOTE"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_SBLOTE = CT2.CT2_SBLOTE"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_DOC = CT2.CT2_DOC"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_SEQLAN = CT2.CT2_SEQLAN"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_SEQUEN = CT2.CT2_SEQUEN"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_EMPORI = CT2.CT2_EMPORI"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_FILORI = CT2.CT2_FILORI"
	_oSQL:_sQuery +=               "            AND HIST1.CT2_SEQHIS = '003'"
	_oSQL:_sQuery +=               " ),"
	_oSQL:_sQuery +=        " '') AS HISTORICO,"
	_oSQL:_sQuery +=        " CT2_CCD AS CC_DEBITO,"
	_oSQL:_sQuery +=        " RTRIM (ISNULL (CTTD.CTT_DESC01, '')) AS DESC_CC_DB"
	_oSQL:_sQuery +=        " FROM " + RetSQLName ("CT2") + " CT2"
	_oSQL:_sQuery +=        "      LEFT JOIN " + RetSQLName ("CT1") + " CT1D"
	_oSQL:_sQuery +=        "           ON  ("
	_oSQL:_sQuery +=        "                   CT1D.CT1_FILIAL = '  '"
	_oSQL:_sQuery +=        "                   AND CT1D.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=        "                   AND CT1D.CT1_CONTA = CT2.CT2_DEBITO"
	_oSQL:_sQuery +=        "               )"
	_oSQL:_sQuery +=        "      LEFT JOIN " + RetSQLName ("CTT") + " CTTD"
	_oSQL:_sQuery +=        "           ON  ("
	_oSQL:_sQuery +=        "                   CTTD.CTT_FILIAL = ''"
	_oSQL:_sQuery +=        "                   AND CTTD.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=        "                   AND CTTD.CTT_CUSTO = CT2.CT2_CCD"
	_oSQL:_sQuery +=        "               )"
	_oSQL:_sQuery += " WHERE CT2.D_E_L_E_T_ = ''"
	_oSQL:_sQuery +=   " AND CT2.CT2_DATA   BETWEEN '" + dtos (mv_par01) + "' AND '" + dtos (mv_par02) + "'"
	_oSQL:_sQuery +=   " AND CT2.CT2_DEBITO BETWEEN '" + mv_par03 + "' AND '" + mv_par04 + "'"
	_oSQL:_sQuery +=   " AND CT2.CT2_CCD    BETWEEN '" + mv_par05 + "' AND '" + mv_par06 + "'"
	_oSQL:_sQuery +=   " AND CT2_DC != '4'"
	_oSQL:_sQuery +=   " AND CT2_DEBITO >= '403'"
	_oSQL:_sQuery +=   " AND CT2_HP != '051'" // elimina transfrerencias de resultado
	_oSQL:_sQuery +=   " AND NOT CT2.CT2_DEBITO IN ('403010199001','403010299001','403010399001','403010499001','403010599001','403010699001', '403010799001','405010101099','405010201099','405020101099','405020501099','406010101099','406020101099')"  // apropriacao ato nao cooperado
	_oSQL:_sQuery +=   " AND NOT CT2.CT2_DEBITO LIKE '7010110%'"
	_oSQL:_sQuery +=   " AND NOT CT2.CT2_DEBITO LIKE '40501%'"
	_oSQL:_sQuery +=   " AND NOT CT2.CT2_DEBITO LIKE '40601%'"
	_oSQL:_sQuery += " ORDER BY DATA, VALOR DESC, FILIAL, CTA_DEB"

	_oSQL:ArqDestXLS = 'VA_XLS60'
	_oSQL:Log ()
	_oSQL:Qry2Xls (.F., .F., .F.)
return


// --------------------------------------------------------------------------
// Cria Perguntas no SX1
Static Function _ValidPerg ()
	local _aRegsPerg := {}
	local _aDefaults := {}

	//                 Ordem Descri                          tipo tam  dec valid  F3     opcoes (combo)       help
	aadd (_aRegsPerg, {01, "Data Inicial                  ", "D", 8,   0,  "",   "   ", {},                   ""})
	aadd (_aRegsPerg, {02, "Data Final                    ", "D", 8,   0,  "",   "   ", {},                   ""})
	aadd (_aRegsPerg, {03, "Conta inicial                 ", "C", 20,  0,  "",   "CT1", {},                   ""})
	aadd (_aRegsPerg, {04, "Conta final                   ", "C", 20,  0,  "",   "CT1", {},                   ""})
	aadd (_aRegsPerg, {05, "Centro custo inicial          ", "C", 9,   0,  "",   "CTT", {},                   ""})
	aadd (_aRegsPerg, {06, "Centro custo final            ", "C", 9,   0,  "",   "CTT", {},                   ""})
	U_ValPerg (cPerg, _aRegsPerg, {}, _aDefaults)
Return
